import 'dart:async';

void main() {
  // –°–æ–∑–¥–∞–µ–º ZoneSpecification —Å –ø–µ—Ä–µ—Ö–≤–∞—Ç–æ–º –≤—Å–µ—Ö —Ç–∏–ø–æ–≤ callback-—Ñ—É–Ω–∫—Ü–∏–π
  final zoneSpec = ZoneSpecification(
    // –î–∞–Ω–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã—Ö
    // callback-—Ñ—É–Ω–∫—Ü–∏–π –±–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ (–Ω–∞–ø—Ä–∏–º–µ—Ä, () => void)
    registerCallback:
      <R>(Zone self, ZoneDelegate parent, Zone zone, R Function() f) {
          print('üìù registerCallback');
          // –û–±–æ—Ä–∞—á–∏–≤–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π callback –≤ –ª–æ–≥–∏—Ä—É—é—â—É—é
          // —Ñ—É–Ω–∫—Ü–∏—é-–∑–∞–º—ã–∫–∞–Ω–∏–µ wrappedCallback
          R wrappedCallback() {
            print('üîÑ –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è callback –±–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤');
            return f();
          }

          // –ü–µ—Ä–µ–¥–∞–µ–º wrappedCallback –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –≤ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫—É—é –∑–æ–Ω—É
          // –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
          return parent.registerCallback(zone, wrappedCallback);
        },
  );

  runZoned(() async {
    Timer(Duration(milliseconds: 5), () {
      print('‚è∞ Timer —Å—Ä–∞–±–æ—Ç–∞–ª!\n');
    });

    scheduleMicrotask(() {
      print('‚ö° Microtask –≤—ã–ø–æ–ª–Ω–µ–Ω!\n');
    });

    Future.delayed(Duration(milliseconds: 5), () {
      print('‚è∞ Future –≤—ã–ø–æ–ª–Ω–µ–Ω!\n');
    });
    
    print('');
  }, zoneSpecification: zoneSpec);
}
